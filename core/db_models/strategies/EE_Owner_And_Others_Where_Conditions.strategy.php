<?php
if ( !defined( 'EVENT_ESPRESSO_VERSION' ) ) {
	exit( 'No direct script access allowed' );
}

/**
 *
 * EE_Owner_Only_Where_Conditions
 *
 * Extends EE_Owner_Only_Where_Conditions. Is similar, except ORs the conditions
 * provided in the constructor with those generated by EE_Owner_Only_Where_Conditions,
 * because we shouldn't be grabbing the current user on contruction of models or
 * default where conditions
 *
 * @package			Event Espresso
 * @subpackage
 * @author				Mike Nelson
 *
 */
class EE_Owner_And_Others_Where_Conditions extends EE_Owner_Only_Where_Conditions{

	/**
	 * Gets the where conditions to be added onto the query.
	 * For this special case, joins the conditions provided in the constructor with
	 * the requirement that the item belong to the current user
	 * (because using get_current_user_id()
	 * @param string $model_relation_chain
	 * @return array like what's expected in EEM_Base::get_all()'s $query_params[0]
	 */
	function get_default_where_conditions( $model_relation_chain = '' ){
		$where_conditions = array_replace_recursive(  $this->_get_default_where_conditions(), $this->get_where_conditions_provided() );
		return $this->add_model_relation_chain_onto_where_conditions( array( 'OR*owner_and_others' => $where_conditions ), $model_relation_chain );
	}

}

// End of file EE_Owner_Only_Where_Conditions.strategy.php